package ${package}.${moduleName}.controller;

import io.swagger.annotations.ApiOperation;
import org.springframework.beans.factory.annotation.Autowired;
import io.swagger.annotations.ApiResponse;
import io.swagger.annotations.ApiResponses;
import org.springframework.http.HttpStatus;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageRequest;
import org.springframework.data.domain.Pageable;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;
import com.smcaiot.cloud.common.entity.PageParam;
import com.smcaiot.cloud.common.entity.PageResult;
import com.smcaiot.cloud.common.entity.RestResp;
import ${package}.${moduleName}.entity.${className};
import ${package}.${moduleName}.service.${className}Service;

import java.util.List;
import javax.validation.Valid;

/**
 * ${comments}
 *
 * @author ${author}
 * @date ${datetime}
 */
@RestController
@RequestMapping("/${pathName}")
@Api(tags = {"${comments}管理"})
public class ${className}Controller {

    @Autowired
    private ${className}Service ${classname}Service;

    /**
     * 分页查询
     *
     * @param ${classname}
     * @param pageParam
     * @return
     */
    @ApiOperation(value = "分页查询",
            notes = "分页查询",
            produces = "application/json")
    @ApiResponses({@ApiResponse(code = 200, message = "查询成功")})
    @RequestMapping(value = "/findPage", method = RequestMethod.POST)
    public RestResp<PageResult<${className}>> findPage(@RequestBody ${className} ${classname}, @Valid PageParam pageParam) {
        PageResult<${className}> result = ${classname}Service.findPage(${classname}, pageParam);
        return RestResp.successRestResp(result);
    }

    /**
     * 查询所有
     *
     * @return
     */
    @ApiOperation(value = "查询所有", notes = "查询所有", produces = "application/json")
    @ApiResponses({@ApiResponse(code = 200, message = "查询成功!"),
            @ApiResponse(code = 204, message = "没有内容!")})
    @RequestMapping(method = RequestMethod.GET)
    public RestResp<List<${className}>> findAll() {
        List<${className}> list = ${classname}Service.findAll();
        return RestResp.successRestResp(list);
    }

    /**
     * 查询
     *
     * @param id
     * @return
     */
    @ApiOperation(value = "查询", notes = "")
    @RequestMapping(value = "{id}", method = RequestMethod.GET)
    public RestResp<${className}> get(@PathVariable("id") String id) {
        ${className} ${classname} =${classname}Service.findById(id);
        return RestResp.successRestResp(${classname});
    }

    /**
     * 新增
     *
     * @param ${classname}
     * @return
     */
    @ApiOperation(value = "新增", notes = "")
    @RequestMapping(method = RequestMethod.POST)
    public RestResp<Object> save(@RequestBody ${className} ${classname}) {
        int result = ${classname}Service.save(${classname});
        return RestResp.successRestResp(result);
    }

    /**
     * 修改
     *
     * @param id
     * @param ${classname}
     * @return
     */
    @ApiOperation(value = "修改", notes = "")
    @RequestMapping(value = "{id}", method = RequestMethod.PUT)
    public RestResp<Object> updateById(@PathVariable("id") String id, @RequestBody ${className} ${classname}) {
        int result = ${classname}Service.updateById(${classname});
        return RestResp.successRestResp(result);
    }

    /**
     * 删除
     *
     * @param id
     * @return
     */
    @ApiOperation(value = "删除", notes = "")
    @RequestMapping(value = "{id}", method = RequestMethod.DELETE)
    public RestResp<Void> delete(@PathVariable("id") String id) {
        int result = ${classname}Service.delete(id);
        return RestResp.successRestResp(result);
    }

}